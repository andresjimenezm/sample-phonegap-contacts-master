// Generated by CoffeeScript 1.3.3
(function() {

  define(function(require, exports, module) {
    var SwipeView, swipe;
    swipe = require('vendor/swipe-js/swipe.min');
    return module.exports = SwipeView = (function() {

      function SwipeView(options) {
        this.options = options;
        this.isOnTouchDevice = this.checkForTouchDevice();
        this.hasNav = true;
        if (options.hasNav !== void 0) {
          this.hasNav = this.options.hasNav;
        }
        if (options.model !== void 0) {
          this.model = this.options.model;
        }
        this.render(this.model, this.options.template);
      }

      SwipeView.prototype.render = function(model, tpl) {
        var $target, h, i, length, ul,
          _this = this;
        $target = $('#' + this.options.target);
        this.compId = this.options.target + '-gallery';
        this.id = 'slider_' + String(Math.random()).substring(3);
        this.$el = $('#' + this.id);
        length = model.length;
        ul = '<ul>';
        $(model).each(function(i, itemData) {
          return ul += tpl(itemData);
        });
        ul += '</ul>';
        h = '';
        h += '<div id="' + this.compId + '" class="swipe-navigator">';
        h += "<nav>";
        h += '<a href="#" class="prev" onclick="window.' + this.id + '.prev();return false;"><em>-</em></a>';
        h += "<span class=\"position\">";
        i = 0;
        while (i < length) {
          if (i === 0) {
            h += "<em class=\"on\">&bull;</em>";
          } else {
            h += "<em>&bull;</em>";
          }
          i++;
        }
        h += "</span>";
        h += '<a href="#" class="next" onclick="window.' + this.id + '.next();return false;"><em>-</em></a>';
        h += '</nav>';
        h += '<div id="' + this.id + '" class="swipe-slider">';
        h += ul;
        h += "</div>";
        h += "</div>";
        $target.html(h);
        this.bullets = $("#" + this.compId + " .position em");
        this.swipeComponent = new Swipe(document.getElementById(this.id), {
          callback: function(e, pos) {
            i = _this.bullets.length;
            while (i--) {
              _this.bullets[i].className = " ";
            }
            _this.bullets[pos].className = "on";
            return $(_this).trigger('change', _this);
          }
        });
        window[this.id] = this.swipeComponent;
        if (this.hasNav === false) {
          $("#" + this.compId + " nav").css('display', 'none');
          $("#" + this.compId + " .next").css('display', 'none');
          $("#" + this.compId + " .prev").css('display', 'none');
        }
        $("#" + this.compId).hide(0).delay(200).show(300);
        return $("#" + this.id + " li").bind("click", this.options.clickHandler);
      };

      /*swipeCallback: (e,pos) ->
          $(@).trigger('change')
          i = @bullets.length
          @bullets[i].className = " "  while i--
          @bullets[pos].className = "on"
      */


      SwipeView.prototype.next = function() {
        return this.swipeComponent.next();
      };

      SwipeView.prototype.prev = function() {
        return this.swipeComponent.prev();
      };

      SwipeView.prototype.slide = function(index, duration) {
        return this.swipeComponent.slide(index, duration);
      };

      SwipeView.prototype.getPos = function() {
        return this.swipeComponent.getPos();
      };

      SwipeView.prototype.setPos = function(index, duration) {
        return this.slide(index, duration);
      };

      SwipeView.prototype.checkForTouchDevice = function() {
        var _ref;
        return (_ref = typeof window.ontouchstart !== 'undefined') != null ? _ref : {
          "true": false
        };
      };

      SwipeView.prototype.getRenderData = function() {
        var _ref;
        return (_ref = this.model) != null ? _ref.toJSON() : void 0;
      };

      SwipeView.prototype.onResize = function(e) {};

      return SwipeView;

    })();
  });

}).call(this);
