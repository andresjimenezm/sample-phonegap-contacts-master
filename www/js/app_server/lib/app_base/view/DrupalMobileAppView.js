// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require, exports, module) {
    var BaseView, DrupalMobileAppView, MediaController, jquerymobile, self;
    BaseView = require('app_base/view/DrupalAppView');
    MediaController = require('app_base/controller/MediaController');
    jquerymobile = require('jquerymobile');
    self = {};
    return module.exports = DrupalMobileAppView = (function(_super) {

      __extends(DrupalMobileAppView, _super);

      function DrupalMobileAppView() {
        this.prepareNode = __bind(this.prepareNode, this);

        this.setupRouter = __bind(this.setupRouter, this);

        this.initDocument = __bind(this.initDocument, this);

        this.initMedia = __bind(this.initMedia, this);
        return DrupalMobileAppView.__super__.constructor.apply(this, arguments);
      }

      DrupalMobileAppView.prototype.initJqueryMobile = function(options) {
        self = this;
        $.support.cors = true;
        this.$mobile = $.mobile;
        this.$mobile.allowCrossDomainPages = true;
        this.$mobile.defaultPageTransition = "none";
        this.appSettings.index_id = this.appSettings.index_nid;
        this.appSettings.book_id = this.appSettings.index_nid;
        this.initService(this.initMedia);
        this.currentNode = {
          nid: 0
        };
        this.previousNode = {
          nid: 0
        };
        this.edgeCompId = '';
        return window.renderEdgeTemplate = function(sym, compId) {
          return self.renderEdgeTemplate(sym, compId);
        };
      };

      DrupalMobileAppView.prototype.initMedia = function() {
        return this.media = new MediaController({
          app: this,
          preload_manifest: [],
          media_root: this.appSettings.media_root,
          callback: this.initDocument
        });
      };

      DrupalMobileAppView.prototype.initDocument = function() {
        var hash;
        this.setupRouter();
        Backbone.history.start();
        hash = window.location.hash;
        if (hash === "") {
          return window.location.hash = "#page-node-" + this.appSettings.index_nid;
        } else {

        }
      };

      DrupalMobileAppView.prototype.setupRouter = function() {
        var _this = this;
        this.log('setupRouter');
        return this.app_router.on("route:defaultRoute", function(hashtag) {
          var node;
          if (hashtag.match("page-node-")) {
            node = _this.model.nodes[hashtag.split('-')[2]];
            _this.hash = hashtag;
            if (node.nid !== _this.currentNode.nid) {
              _this.prepareNode(node);
              _this.$mobile.changePage('#page-node-' + node.nid);
              return _this.renderNode(node);
            }
          }
        });
      };

      DrupalMobileAppView.prototype.prepareNode = function(node) {
        var data, page_id,
          _this = this;
        page_id = '#page-node-' + node.nid;
        $(':jqmData(url="page-node-' + node.nid + '")').live("pageinit", function(event) {
          console.log('pageinit: ' + page_id);
          _this.currentNode = node;
          _this.$currentNodeRenderer = $(page_id + ' .node-holder .node');
          return _this.renderNode(node);
          /*$("#Stage").delay(500).show(0)
          $("#Stage").children().delay(600).show(0)
          */

        });
        document.title = self.model.siteParams.site_name + ' :: ' + node.title;
        data = {
          node: node,
          meta: this.model.siteParams,
          edgeStage: this.edgeContent
        };
        if ($(page_id).size()) {
          $(page_id).remove();
        }
        this.append(new EJS({
          url: this.appSettings.path_to_ejs_templates + "/page.ejs"
        }).render(data));
        $(page_id + ' .header').html(new EJS({
          url: this.appSettings.path_to_ejs_templates + "/header.ejs"
        }).render(data));
        $(page_id + ' .node-holder').html(new EJS({
          url: this.appSettings.path_to_ejs_templates + "/node.ejs"
        }).render(data));
        return $(page_id + ' .footer').html(new EJS({
          url: this.appSettings.path_to_ejs_templates + "/footer.ejs"
        }).render(this.drupal.getBookLinks(this.model.books[this.appSettings.book_id])));
      };

      DrupalMobileAppView.prototype.renderEdgeTemplate = function(sym) {
        return console.log('default edge render');
      };

      return DrupalMobileAppView;

    })(BaseView);
  });

}).call(this);
